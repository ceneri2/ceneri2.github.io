{"relevantArticles":[{"articleTitle":"springboot-04-data 数据访问","articleAbstractText":"JDBC数据访问  引入模块  2.  项目创建成功之后，会自动配上如下的配置： &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt;   新建一个application.yml配置文件：  spring: datasource: username: root password: 123456 #?serverTimezone=UTC解决时区的报错 url: jdbc:mysql://localho....","articleStatus":0,"articlePermalink":"/articles/2020/02/18/1607365451628.html","articleImg1URL":"https://b3logfile.com/file/2020/12/solofetchupload2951331360451824761-cfa8f19b.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"springboot-03-web web开发","articleAbstractText":"一.静态资源访问 1.三种方式访问并处理静态资源：  webjars方式：（一般不使用）   可访问webjars官网查找需要的资源 导入需要的资源配置放入pom.xml中 可以查看项目中的lib包资源是否被导入 在lib包中查看导入的资源下有一个WEB-INF/resources里面就是我们需要的静态资源 浏览器访问：localhost:8080/webjars/xxx （xxx为资源名）   在项目的resources目录下可访问的四个文件夹的方式：（常用）  public文件夹，static文件夹，resources文件夹，WEB-INF/resources文件夹，一般用前三个 优先级：resources&gt;static&gt;public   自定义资源访问路径：  在application.properties中添加spring.resources.static-locations=classpath:/ceneri/,classpath:/hello/ 用来指定静态资源访问路径为ceneri文件夹和hello文件夹    二.首页定制 1.首页可存放的目录（4个）  p....","articleStatus":0,"articlePermalink":"/articles/2020/02/18/1607354377610.html","articleImg1URL":"https://b3logfile.com/file/2020/12/solofetchupload118380051204366966-a6f88021.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"springboot-02-config 配置文件及原理","articleAbstractText":"一.知识点 配置文件 SpringBoot使用一个全局的配置文件 ， 配置文件名称是固定的  application.properties  语法结构 ： key=value   application.yml  语法结构 ：key：空格 value    **配置文件的作用 ：修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了； ** YAML YAML是 \"YAML Ain't a Markup Language\" （YAML不是一种置标语言）的递归缩写。 在开发的这种语言时，YAML 的意思其实是：\"Yet Another Markup Language\"（仍是一种置标语言） YAML A Markup Language ：是一个标记语言 YAML isnot Markup Language ：不是一个标记语言 标记语言 以前的配置文件，大多数都是使用xml来配置；比如一个简单的端口配置，我们来对比下yaml和xml yaml配置： server： prot: 8080 xml配置： &lt;server&gt; &lt;port&gt;....","articleStatus":0,"articlePermalink":"/articles/2020/02/18/1607283121892.html","articleImg1URL":"https://b3logfile.com/file/2020/12/solofetchupload3862881748604497236-55b97fed.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"springboot-01-helloworld 初识及原理探究","articleAbstractText":"第一个SpringBoot程序 官网创建 项目创建方式一：使用Spring Initializr 的 Web页面创建项目  打开  https://start.spring.io/  填写项目信息 点击\u201dGenerate Project\u201c按钮生成项目；下载此项目 解压项目包，并用IDEA以Maven项目导入，一路下一步即可，直到项目导入完毕。    删除无关文件    HelloworldApplication同级目录创建controller包  controller包中新增接口  编写完毕后，从主程序启动项目，浏览器发起请求，看页面返回；控制台输出了 Tomcat 访问的端口号！    将项目打成jar包，点击 maven的 package，打成了jar包后，就可以在任何地方运行了！OK java -jar xxx.jar   编译器创建 项目创建方式二：使用 IDEA 直接创建项目  创建一个新项目 选择spring initalizr ， 可以看到默认就是去官网的快速构建工具那里实现 填写项目信息 选择初始化的组件（初学勾选 Web 即可） 填写项目路径 等待项目构建成功    ....","articleStatus":0,"articlePermalink":"/articles/2020/02/18/1607280652102.html","articleImg1URL":"https://b3logfile.com/file/2020/12/solofetchupload8896645380676861602-1d8b3d9c.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"}]}