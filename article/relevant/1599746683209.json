{"relevantArticles":[{"articleTitle":"redis-05-Hash哈希","articleAbstractText":"hash哈希 # hset、hget 命令用于为哈希表中的字段赋值 。 # hmset、hmget 同时将多个field-value对设置到哈希表中。会覆盖哈希表中已存在的字段。 # hgetall 用于返回哈希表中，所有的字段和值。 # hdel 用于删除哈希表 key 中的一个或多个指定字段 hset myhash field1 \"a\" hget myhash field1 hmset myhash field1 \"hello\" field2 \"world\" hgetall myhash hdel myhash field1 # hlen 获取哈希表中字段的数量。 hlen myhash # hexists 查看哈希表的指定字段是否存在。 hexists myhash field1 #存在返回1 hexists myhash field3 #不存在返回0 # hkeys 获取哈希表中的所有域（field）。 # hvals 返回哈希表所有域(field)的值。 hkeys myhash hvals myhash # hincrby 为哈希表中的字段值加上指定增量值。 hset my....","articleStatus":0,"articlePermalink":"/articles/2019/09/16/1599749076072.html","articleImg1URL":"https://b3logfile.com/bing/20200111.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"redis-07-三种特殊数据类","articleAbstractText":"三种特殊数据类  GEO地理位置  Redis 的 GEO 特性在 Redis 3.2 版本中推出， 这个功能可以将用户给定的地理位置信息储存起来， 并对 这些信息进行操作。来实现诸如附近位置、摇一摇这类依赖于地理位置信息的功能。geo的数据类型为 zset。 GEO 的数据结构总共有六个常用命令：geoadd、geopos、geodist、georadius、 georadiusbymember、gethash 官方文档：https://www.redis.net.cn/order/3685.html  HyperLogLog  Redis 在 2.8.9 版本添加了 HyperLogLog 结构。 Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积 非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。 在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。 HyperLogL....","articleStatus":0,"articlePermalink":"/articles/2019/09/18/1599750078455.html","articleImg1URL":"https://b3logfile.com/bing/20200113.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"redis-04-List链表","articleAbstractText":"list链表 # lpush：将一个或多个值插入到列表头部。（左） # rpush：将一个或多个值插入到列表尾部。（右） # lrange：返回列表中指定区间内的元素，区间以偏移量 start 和 end 指定。 # 其中 0 表示列表的第一个元素， 1 表示列表的第二个元素，以此类推。 # 你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此 类推。 lpush list one lpush list two lpush list three lrange list 0 -1 lrange list 0 1 # lpop 命令用于移除并返回列表的第一个元素。当列表 key 不存在时，返回 nil 。 # rpop 移除列表的最后一个元素，返回值为移除的元素。 lpop list ##### \"two\" rpop list ###### \"right\" lrange list 0 -1 ######1) \"one\" # lindex，按照索引下标获得元素（-1代表最后一个，0代表是第一个） lindex list 1 lindex list 0....","articleStatus":0,"articlePermalink":"/articles/2019/09/15/1599748813551.html","articleImg1URL":"https://b3logfile.com/bing/20200107.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"redis-06-Zset有序集合","articleAbstractText":"zset有序集合 在set基础上，加一个score值。之前set是k1 v1 v2 v3，现在zset是 k1 score1 v1 score2 v2 # zadd 将一个或多个成员元素及其分数值加入到有序集当中。 # zrange 返回有序集中，指定区间内的成员 zadd myset 1 \"one\" zadd myset 2 \"two\" 3 \"three\" zrange myset 0 -1 # zrangebyscore 返回有序集合中指定分数区间的成员列表。有序集成员按分数值递增(从小到大) 次序排列。 zrangebyscore salary -inf +inf # 显示整个有序集 zrangebyscore salary -inf +inf withscores # 递增排列 分数也显示 zrevrange salary 0 -1 withscores # 递减排列 分数也显示 zrangebyscore salary -inf 2500 withscores # 显示工资 &lt;=2500 # zrem 移除有序集中的一个或多个成员 zrem salary xiaomin....","articleStatus":0,"articlePermalink":"/articles/2019/09/17/1599749567559.html","articleImg1URL":"https://b3logfile.com/bing/20200623.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"redis-03-Set集合","articleAbstractText":"# sadd 将一个或多个成员元素加入到集合中，不能重复 # smembers 返回集合中的所有的成员。 # sismember 命令判断成员元素是否是集合的成员。 sadd myset \"hello\" smembers myset sismember myset \"hello\" #scard，获取集合里面的元素个数 scard myset #srem key value 用于移除集合中的一个或多个成员元素 srem myset \"xiaoming\" #srandmember key 命令用于返回集合中的一个随机元素。srandmember myset srandmember myset 2 #spop key 用于移除集合中的指定 key 的一个或多个随机元素 spop myset #smove source destination member #将指定成员 member 元素从 source 集合移动到 destination 集合。smove myset myset2 \"xiaoming\" #数字集合类 sdiff差集 sunion并集 sinter交集 sdiff key1 ....","articleStatus":0,"articlePermalink":"/articles/2019/09/14/1599747790318.html","articleImg1URL":"https://b3logfile.com/bing/20191101.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}