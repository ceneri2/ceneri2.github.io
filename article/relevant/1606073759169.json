{"relevantArticles":[{"articleTitle":"java-10-JAVA处理日期和时间","articleAbstractText":"概念 理解日期、时间和时刻 理解时区的概念 理解夏令时，同一地区用GMT/UTC和城市表示的时区可能导致时间不同 理解Locale用来针对当地用户习惯格式化日期、时间、数字、货币等 Date Epoch Time：从1970-01-01 00:00:00 GMT+0:00开始到现在的秒数 JDK有新旧两套API处理日期和时间 java.util.Date表示日期和时间，内部使用long表示epoch毫秒数 Date和long的转换 SimpleDateFormat：用于Date和String的解析和格式化 格式化字符串的定义： https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html Locale表示用户所在地区的日期、时间、数字、货币等格式。 10.2 Calendar Calendar和Date、long可以互相转换 Calendar可以用set/get设置和获取指定字段 Calendar可以实现：  设置特定的日期和时间 设置时区并获得转换后的时间 加减日期和时间  TimeZone表示时区....","articleStatus":0,"articlePermalink":"/articles/2019/01/23/1606073862292.html","articleImg1URL":"https://b3logfile.com/bing/20190913.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"java-09-I0编程","articleAbstractText":"9.1 IO IO: Input / Output IO流是一种流式的数据输入/输出模型：  二进制数据以byte为最小单位在InputStream / OutputStream中单向流动 字符数据以char为最小单位在Reader / Writer中单向流动 JDK的java.io包提供了同步IO功能 JDK的java.nio包提供了异步IO功能  Java的IO流的接口：  字节流接口：InputStream / OutputStream 字符流接口：Reader / Writer  9.2 File java.io.File表示文件系统的一个文件或者目录：  isFile()：是否是文件 isDirectory()：是否是目录  创建File对象本身不涉及IO操作 获取路径／绝对路径／规范路径： getPath() / getAbsolutePath() / getCanonicalPath() 文件操作：  canRead()：是否允许读取该文件 canWrite()：是否允许写入该文件 canExecute()：是否允许运行该文件 length()：获取文件大小 create....","articleStatus":0,"articlePermalink":"/articles/2019/01/23/1606073820820.html","articleImg1URL":"https://b3logfile.com/bing/20190522.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"java-07-JAVA反射与泛型","articleAbstractText":"7.1 class类 class本身是一种数据类型（Type），class/interface的数据类型是Class，JVM为每个加载的class创建唯一的Class实例。 Class实例包含该class的所有信息，通过Class实例获取class信息的方法称为反射（Reflection） 获取一个class的Class实例：  Class cls = String.class; Class cls = \"str\".getClass(); Class cls = Class.forName(\"java.lang.String\");  注意Class的==比较和instanceof的区别。 从Class实例获取class信息：  getName() getSimpleName() getPackage()  从Class实例判断class类型：  isInterface() isEnum() isArray() isPrimitive()  创建class实例： cls.newInstance() JVM总是动态加载class，可以在运行期根据条件控制加载class。 7.2 Field....","articleStatus":0,"articlePermalink":"/articles/2019/01/23/1606073660281.html","articleImg1URL":"https://b3logfile.com/bing/20180715.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}