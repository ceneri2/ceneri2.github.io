{"randomArticles":[{"articleTitle":"pmp-10-项目沟通管理","articleAbstractText":"项目沟通管理  项目沟通管理由两个部分组成： 第一部分是制定策略，确保沟通对相关方行之有效；第二部分是执行必要活动，以落实沟通策略。 沟通可以为成功完成项目与项目集建立必要的关系 应用书面沟通的 5C 原则  Clear Purpose 目的明确； Correct Expression 表达正确； Concise Expression 表达简洁； Coherent Logic 逻辑连贯； Controlling Ideas 思路掌握 正确的语法和拼写； 简洁的表述和无多余字； 清晰的目的和表述（适合读者的需要）； 连贯的思维逻辑； 受控的语句和想法承接   沟通技巧  积极倾听； 理解文化和个人差异； 识别、设定并管理相关方期望； 强化技能；   与别人发生误会，应首先检查沟通是否有问题 潜在沟通对象计算题  n * (n-1) /2  n为干系人数量     沟通活动分类  正式  报告、正式会议、会议议程和记录、相关方简报和演示   非正式  采用电子邮件、社交媒体、网站，以及非正式临时讨论的一般沟通活动     沟通策略和沟通管理计划将成为监督沟通效果的依据 项目沟通管理的发展趋....","articleStatus":0,"articlePermalink":"/articles/2019/12/11/1600706396081.html","articleImg1URL":"https://b3logfile.com/file/2020/09/solofetchupload379909222089667871-d224cc79.jpeg?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"mybatis-03-CRUD","articleAbstractText":"1、namespace namespace中的包名要和 Dao/mapper 接口的包名一致！ 2、select 选择，查询语句;  id : 就是对应的namespace中的方法名； resultType：Sql语句执行的返回值！ parameterType ： 参数类型！   编写接口  //根据ID查询用户 User getUserById(int id);  编写对应的mapper中的sql语句  &lt;select id=\"getUserById\" parameterType=\"int\" resultType=\"com.kuang.pojo.User\"&gt;  select * from mybatis.user where id = #{id} &lt;/select&gt;   测试   @Test  public void getUserById() {  SqlSession sqlSession = MybatisUtils.getSqlSession();   UserMapper mapper = sqlSession.getMapper(UserMappe....","articleStatus":0,"articlePermalink":"/articles/2019/07/15/1606075471407.html","articleImg1URL":"https://b3logfile.com/bing/20200922.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"springboot-04-data 数据访问","articleAbstractText":"JDBC数据访问  引入模块  2.  项目创建成功之后，会自动配上如下的配置： &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt;   新建一个application.yml配置文件：  spring: datasource: username: root password: 123456 #?serverTimezone=UTC解决时区的报错 url: jdbc:mysql://localho....","articleStatus":0,"articlePermalink":"/articles/2020/02/18/1607365451628.html","articleImg1URL":"https://b3logfile.com/file/2020/12/solofetchupload2951331360451824761-cfa8f19b.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"ssmbuild-整合SSM","articleAbstractText":"整合SSM 环境要求 环境：  IDEA MySQL 5.7.19 Tomcat 9 Maven 3.6  要求：  需要熟练掌握MySQL数据库，Spring，JavaWeb及MyBatis知识，简单的前端知识；  数据库环境 创建一个存放书籍数据的数据库表 CREATE DATABASE `ssmbuild`; USE `ssmbuild`; DROP TABLE IF EXISTS `books`; CREATE TABLE `books` ( `bookID` INT(10) NOT NULL AUTO_INCREMENT COMMENT '书id', `bookName` VARCHAR(100) NOT NULL COMMENT '书名', `bookCounts` INT(11) NOT NULL COMMENT '数量', `detail` VARCHAR(200) NOT NULL COMMENT '描述', KEY `bookID` (`bookID`) ) ENGINE=INNODB DEFAULT CHARSET=utf8 INSERT INTO `books`....","articleStatus":0,"articlePermalink":"/articles/2019/09/05/1607266751298.html","articleImg1URL":"https://b3logfile.com/bing/20190702.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"spring-03-ioc2 IOC创建对象的方式及Spring配置","articleAbstractText":"1.实体类 public class User { private String name; public User() { System.out.println(\"User的无参构造\"); } public User(String name) { this.name = name; System.out.println(\"User的有参构造\"); } public String getName() { return name; } public void setName(String name) { this.name = name; } public void show(){ System.out.println(\"name=\"+name); } }  2.配置 2.1.使用无参构造创建对象，默认！ &lt;!--无参构造器--&gt; &lt;bean id=\"user\" class=\"com.ceneri.study.pojo.User\"&gt; &lt;property name=\"name\" value=\"狂神\"/&gt; &lt;/bean&gt;  2.2 假设我们要使....","articleStatus":0,"articlePermalink":"/articles/2019/08/03/1606134422725.html","articleImg1URL":"https://b3logfile.com/bing/20180426.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}